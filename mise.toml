[tools]
node = '24.7.0'
pnpm = '10.19.0'
rust = '1.89.0'
tmux = '3.5'
uv = '0.8.14'

[tasks.bootstrap]
run = """
#!/bin/bash
WORKSPACE_ROOT=$PWD

cargo install --path tools/fqc --force
fqc bootstrap
cargo install diesel_cli --no-default-features --features postgres

cd $WORKSPACE_ROOT/backend/
diesel migration run
"""

[tasks.setup-hooks]
run = """
#!/bin/bash
set -e

echo "Setting up pre-commit hooks..."

# Check if uvx is available
if command -v uvx &> /dev/null; then
  echo "Using uvx to install pre-commit..."
  uvx pre-commit install
elif command -v python &> /dev/null || command -v python3 &> /dev/null; then
  echo "Using Python to install pre-commit..."
  PYTHON_CMD=$(command -v python3 || command -v python)

  # Ask for confirmation before installing
  read -p "pre-commit is not installed. Install it using pip? (y/N) " -n 1 -r
  echo
  if [[ $REPLY =~ ^[Yy]$ ]]; then
    # Install pre-commit using pip
    $PYTHON_CMD -m pip install --user pre-commit

    # Install the git hook
    $PYTHON_CMD -m pre-commit install
  else
    echo "Skipping pre-commit installation."
    exit 1
  fi
else
  echo "Error: Neither uvx nor Python is available. Please install one of them."
  exit 1
fi

echo "Pre-commit hooks installed successfully!"
"""

[tasks.build]
run = """
#!/bin/bash
cargo build
cargo install --path tools/fqc --force
pnpm i --frozen-lockfile
pnpm -r run build
"""

[tasks.dserve]
run = ["docker compose up --build --force-recreate -d"]

[tasks.serve]
# TO DO: move script to fqc CLI
run = ["./tools/scripts/serve.sh"]

[tasks.stop]
# TO DO: move script to fqc CLI
run = """
#!/bin/bash
tmux kill-session -t flashqc
docker compose down
"""

[tasks.ci-astro]
run = """
#!/bin/bash
pnpm install --frozen-lockfile
pnpm --filter "flash-qc" build
"""

[tasks.ci-rust]
run = """
#!/bin/bash
export RUSTFLAGS="-Dwarnings"
cargo clippy --all-targets --all-features
"""

[tasks.ci]
depends = ["ci-astro", "ci-rust"]

[env]
DATABASE_URL = 'postgres://flashqc:1234@localhost/flashqc'
