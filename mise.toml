[tools]
node = '24.7.0'
pnpm = '10.15.0'
rust = '1.89.0'
tmux = '3.5'
uv = '0.8.14'

[tasks.bootstrap]
run = """
#!/bin/bash
WORKSPACE_ROOT=$PWD

cargo install --path tools/fqc --force
fqc bootstrap
cargo install diesel_cli --no-default-features --features postgres

cd $WORKSPACE_ROOT/backend/
diesel migration run
"""

[tasks.build]
run = """
#!/bin/bash
cargo build
mise run build-plugins
cargo install --path tools/fqc --force
pnpm i --frozen-lockfile
pnpm --filter "flash-qc" build
"""

[tasks.build-plugins]
run = """
#!/bin/bash
set -e

echo "Building WASM plugins..."

# Find all plugin directories with cdylib crate type
PLUGIN_DIRS=$(cargo metadata --format-version 1 --no-deps | \
  jq -r '.packages[] | select(.manifest_path | contains("plugins")) | select(.targets[0].crate_types[] == "cdylib") | .manifest_path | split("/") | .[:-1] | join("/")')

if [ -z "$PLUGIN_DIRS" ]; then
  echo "No WASM plugins found"
  exit 0
fi

# Build each plugin
for PLUGIN_DIR in $PLUGIN_DIRS; do
  echo "Building plugin in $PLUGIN_DIR..."
  cd "$PLUGIN_DIR"
  npm run build
  cd - > /dev/null
done

echo "All WASM plugins built successfully!"
"""

[tasks.dserve]
run = """
#!/bin/bash
if [ -z "$SKIP_PLUGINS" ]; then
  mise run build-plugins
fi
docker compose up --build --force-recreate -d
"""

[tasks.serve]
# TO DO: move script to fqc CLI
run = ["./tools/scripts/serve.sh"]

[tasks.stop]
# TO DO: move script to fqc CLI
run = ["tmux kill-session -t flashqc"]

[env]
DATABASE_URL = 'postgres://flashqc:1234@localhost/flashqc'
